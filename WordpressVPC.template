{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Assignment to Install and Configure wordpress using Chef",
  "Parameters" : {
   "KeyName": {
         "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
         "Type": "AWS::EC2::KeyPair::KeyName",
         "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
       },
   "InstanceType" : {
          "Description" : "WebServer EC2 instance type",
          "Type" : "String",
          "Default" : "t2.small",
          "AllowedValues" : [ "t1.micro", "t2.micro", "t2.small", "t2.medium"],
          "ConstraintDescription" : "must be a valid EC2 instance type."
        },
   "SSHLocation": {
         "Description": "This is your damm ip address",
         "Type": "String",
         "MinLength": "9",
         "MaxLength": "18",
         "Default": "0.0.0.0/0",
         "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
         "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
       },
   "DBName" : {
         "Default": "wordpress",
         "Description" : "The WordPress database name",
         "Type": "String",
         "MinLength": "1",
         "MaxLength": "64",
         "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
         "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
       },
   "DBUser" : {
         "NoEcho": "true",
         "Description" : "The WordPress database admin account username",
         "Type": "String",
         "MinLength": "1",
         "MaxLength": "16",
         "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
         "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
       },
   "DBPassword" : {
         "NoEcho": "true",
         "Description" : "The WordPress database admin account password",
         "Type": "String",
         "ConstraintDescription" : "must contain only alphanumeric characters."
       },
   "DBRootPassword" : {
         "NoEcho": "true",
         "Description" : "MySQL root password",
         "Type": "String",
         "ConstraintDescription" : "must contain only alphanumeric characters."
       }
     },
   "Mappings" : {
        "AWSInstanceType2Arch" : {
          "t1.micro"    : { "Arch" : "PV64"   },
          "t2.nano"     : { "Arch" : "HVM64"  },
          "t2.micro"    : { "Arch" : "HVM64"  },
          "t2.small"    : { "Arch" : "HVM64"  },
          "t2.medium"   : { "Arch" : "HVM64"  },
          "t2.large"    : { "Arch" : "HVM64"  },
          "m1.small"    : { "Arch" : "PV64"   },
          "m1.medium"   : { "Arch" : "PV64"   },
          "m1.large"    : { "Arch" : "PV64"   },
          "m1.xlarge"   : { "Arch" : "PV64"   },
          "m2.xlarge"   : { "Arch" : "PV64"   },
          "m2.2xlarge"  : { "Arch" : "PV64"   },
          "m2.4xlarge"  : { "Arch" : "PV64"   },
          "m3.medium"   : { "Arch" : "HVM64"  },
          "m3.large"    : { "Arch" : "HVM64"  },
          "m3.xlarge"   : { "Arch" : "HVM64"  },
          "m3.2xlarge"  : { "Arch" : "HVM64"  },
          "m4.large"    : { "Arch" : "HVM64"  },
          "m4.xlarge"   : { "Arch" : "HVM64"  },
          "m4.2xlarge"  : { "Arch" : "HVM64"  },
          "m4.4xlarge"  : { "Arch" : "HVM64"  },
          "m4.10xlarge" : { "Arch" : "HVM64"  },
          "c1.medium"   : { "Arch" : "PV64"   },
          "c1.xlarge"   : { "Arch" : "PV64"   },
          "c3.large"    : { "Arch" : "HVM64"  },
          "c3.xlarge"   : { "Arch" : "HVM64"  },
          "c3.2xlarge"  : { "Arch" : "HVM64"  },
          "c3.4xlarge"  : { "Arch" : "HVM64"  },
          "c3.8xlarge"  : { "Arch" : "HVM64"  },
          "c4.large"    : { "Arch" : "HVM64"  },
          "c4.xlarge"   : { "Arch" : "HVM64"  },
          "c4.2xlarge"  : { "Arch" : "HVM64"  },
          "c4.4xlarge"  : { "Arch" : "HVM64"  },
          "c4.8xlarge"  : { "Arch" : "HVM64"  },
          "g2.2xlarge"  : { "Arch" : "HVMG2"  },
          "g2.8xlarge"  : { "Arch" : "HVMG2"  },
          "r3.large"    : { "Arch" : "HVM64"  },
          "r3.xlarge"   : { "Arch" : "HVM64"  },
          "r3.2xlarge"  : { "Arch" : "HVM64"  },
          "r3.4xlarge"  : { "Arch" : "HVM64"  },
          "r3.8xlarge"  : { "Arch" : "HVM64"  },
          "i2.xlarge"   : { "Arch" : "HVM64"  },
          "i2.2xlarge"  : { "Arch" : "HVM64"  },
          "i2.4xlarge"  : { "Arch" : "HVM64"  },
          "i2.8xlarge"  : { "Arch" : "HVM64"  },
          "d2.xlarge"   : { "Arch" : "HVM64"  },
          "d2.2xlarge"  : { "Arch" : "HVM64"  },
          "d2.4xlarge"  : { "Arch" : "HVM64"  },
          "d2.8xlarge"  : { "Arch" : "HVM64"  },
          "hi1.4xlarge" : { "Arch" : "HVM64"  },
          "hs1.8xlarge" : { "Arch" : "HVM64"  },
          "cr1.8xlarge" : { "Arch" : "HVM64"  },
          "cc2.8xlarge" : { "Arch" : "HVM64"  }
        },
        "AWSInstanceType2NATArch" : {
          "t1.micro"    : { "Arch" : "NATPV64"   },
          "t2.nano"     : { "Arch" : "NATHVM64"  },
          "t2.micro"    : { "Arch" : "NATHVM64"  },
          "t2.small"    : { "Arch" : "NATHVM64"  },
          "t2.medium"   : { "Arch" : "NATHVM64"  },
          "t2.large"    : { "Arch" : "NATHVM64"  },
          "m1.small"    : { "Arch" : "NATPV64"   },
          "m1.medium"   : { "Arch" : "NATPV64"   },
          "m1.large"    : { "Arch" : "NATPV64"   },
          "m1.xlarge"   : { "Arch" : "NATPV64"   },
          "m2.xlarge"   : { "Arch" : "NATPV64"   },
          "m2.2xlarge"  : { "Arch" : "NATPV64"   },
          "m2.4xlarge"  : { "Arch" : "NATPV64"   },
          "m3.medium"   : { "Arch" : "NATHVM64"  },
          "m3.large"    : { "Arch" : "NATHVM64"  },
          "m3.xlarge"   : { "Arch" : "NATHVM64"  },
          "m3.2xlarge"  : { "Arch" : "NATHVM64"  },
          "m4.large"    : { "Arch" : "NATHVM64"  },
          "m4.xlarge"   : { "Arch" : "NATHVM64"  },
          "m4.2xlarge"  : { "Arch" : "NATHVM64"  },
          "m4.4xlarge"  : { "Arch" : "NATHVM64"  },
          "m4.10xlarge" : { "Arch" : "NATHVM64"  },
          "c1.medium"   : { "Arch" : "NATPV64"   },
          "c1.xlarge"   : { "Arch" : "NATPV64"   },
          "c3.large"    : { "Arch" : "NATHVM64"  },
          "c3.xlarge"   : { "Arch" : "NATHVM64"  },
          "c3.2xlarge"  : { "Arch" : "NATHVM64"  },
          "c3.4xlarge"  : { "Arch" : "NATHVM64"  },
          "c3.8xlarge"  : { "Arch" : "NATHVM64"  },
          "c4.large"    : { "Arch" : "NATHVM64"  },
          "c4.xlarge"   : { "Arch" : "NATHVM64"  },
          "c4.2xlarge"  : { "Arch" : "NATHVM64"  },
          "c4.4xlarge"  : { "Arch" : "NATHVM64"  },
          "c4.8xlarge"  : { "Arch" : "NATHVM64"  },
          "g2.2xlarge"  : { "Arch" : "NATHVMG2"  },
          "g2.8xlarge"  : { "Arch" : "NATHVMG2"  },
          "r3.large"    : { "Arch" : "NATHVM64"  },
          "r3.xlarge"   : { "Arch" : "NATHVM64"  },
          "r3.2xlarge"  : { "Arch" : "NATHVM64"  },
          "r3.4xlarge"  : { "Arch" : "NATHVM64"  },
          "r3.8xlarge"  : { "Arch" : "NATHVM64"  },
          "i2.xlarge"   : { "Arch" : "NATHVM64"  },
          "i2.2xlarge"  : { "Arch" : "NATHVM64"  },
          "i2.4xlarge"  : { "Arch" : "NATHVM64"  },
          "i2.8xlarge"  : { "Arch" : "NATHVM64"  },
          "d2.xlarge"   : { "Arch" : "NATHVM64"  },
          "d2.2xlarge"  : { "Arch" : "NATHVM64"  },
          "d2.4xlarge"  : { "Arch" : "NATHVM64"  },
          "d2.8xlarge"  : { "Arch" : "NATHVM64"  },
          "hi1.4xlarge" : { "Arch" : "NATHVM64"  },
          "hs1.8xlarge" : { "Arch" : "NATHVM64"  },
          "cr1.8xlarge" : { "Arch" : "NATHVM64"  },
          "cc2.8xlarge" : { "Arch" : "NATHVM64"  }
        },
        "AWSRegionArch2AMI" : {
          "us-east-1"        : {"PV64" : "ami-2a69aa47", "HVM64" : "ami-6869aa05", "HVMG2" : "ami-bb18efad"},
          "us-west-2"        : {"PV64" : "ami-7f77b31f", "HVM64" : "ami-7172b611", "HVMG2" : "ami-31912f51"},
          "us-west-1"        : {"PV64" : "ami-a2490dc2", "HVM64" : "ami-31490d51", "HVMG2" : "ami-0a9dcf6a"},
          "eu-west-1"        : {"PV64" : "ami-4cdd453f", "HVM64" : "ami-f9dd458a", "HVMG2" : "ami-873e61e1"},
          "eu-west-2"        : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-886369ec", "HVMG2" : "NOT_SUPPORTED"},
          "eu-central-1"     : {"PV64" : "ami-6527cf0a", "HVM64" : "ami-ea26ce85", "HVMG2" : "ami-a16ba4ce"},
          "ap-northeast-1"   : {"PV64" : "ami-3e42b65f", "HVM64" : "ami-374db956", "HVMG2" : "ami-6b443f0c"},
          "ap-northeast-2"   : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-2b408b45", "HVMG2" : "NOT_SUPPORTED"},
          "ap-southeast-1"   : {"PV64" : "ami-df9e4cbc", "HVM64" : "ami-a59b49c6", "HVMG2" : "ami-1c0ba17f"},
          "ap-southeast-2"   : {"PV64" : "ami-63351d00", "HVM64" : "ami-dc361ebf", "HVMG2" : "ami-bf0d0adc"},
          "ap-south-1"       : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-ffbdd790", "HVMG2" : "ami-6135440e"},
          "us-east-2"        : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-f6035893", "HVMG2" : "NOT_SUPPORTED"},
          "ca-central-1"     : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-730ebd17", "HVMG2" : "NOT_SUPPORTED"},
          "sa-east-1"        : {"PV64" : "ami-1ad34676", "HVM64" : "ami-6dd04501", "HVMG2" : "NOT_SUPPORTED"},
          "cn-north-1"       : {"PV64" : "ami-77559f1a", "HVM64" : "ami-8e6aa0e3", "HVMG2" : "NOT_SUPPORTED"}
        }

      },

  "Resources" : {
    "VPC" : {
          "Type" : "AWS::EC2::VPC",
          "Properties" : {
            "CidrBlock" : "10.0.0.0/16",
            "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
          }
        },
    "Subnet" : {
          "Type" : "AWS::EC2::Subnet",
          "DependsOn" : "VPC",
          "Properties" : {
            "VpcId" : { "Ref" : "VPC" },
            "CidrBlock" : "10.0.0.0/24",
            "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
          }
        },
    "IGW" : {
             "Type" : "AWS::EC2::InternetGateway",
             "Properties" : {
                "Tags" : [ {"Key" : "Owner", "Value" : "arun.sanna"}]
             }
          },
     "IGWAttachment" : {
     	     "Type" : "AWS::EC2::VPCGatewayAttachment",
     	     "DependsOn" : "IGW",
     	     "Properties" : {
     			"VpcId" : { "Ref" : "VPC" },
     			"InternetGatewayId" : { "Ref" : "IGW" }
     	     }
     	  },
        "RouteTable" : {
                 "Type" : "AWS::EC2::RouteTable",
                 "DependsOn" : "IGW",
                 "Properties" : {
                       "VpcId" : { "Ref": "VPC" }
                 }
         },
        "Route" : {
                "Type" : "AWS::EC2::Route",
                "DependsOn" : "IGW",
                  "Properties" : {
                    "DestinationCidrBlock" : "0.0.0.0/0",
                    "GatewayId" : { "Ref": "IGW" },
                    "RouteTableId" : { "Ref": "RouteTable" }
                }
         },
        "RouteTableAssoc" : {
                 "Type" : "AWS::EC2::SubnetRouteTableAssociation",
                 "DependsOn" : "Subnet",
                 "Properties" : {
                   "SubnetId" : { "Ref" : "Subnet" },
                   "RouteTableId" : { "Ref" : "RouteTable" }
                 }
         },
         "LaunchConfig": {
           "Type" : "AWS::AutoScaling::LaunchConfiguration",
           "Properties": {
                   "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
                                     { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
                   "InstanceType"   : { "Ref" : "InstanceType" },
                   "NetworkInterfaces": [ {
                         "AssociatePublicIpAddress": "true",
                         "DeviceIndex": "0",
                         "GroupSet": [{ "Ref" : "WebServerSecurityGroup" }],
                         "SubnetId": { "Ref" : "Subnet" }
                         } ],
                    "KeyName" : { "Ref": "KeyName" },
                    "UserData": {
                              "Fn::Base64": {
                                "Fn::Join": [
                                  "",
                                  [
                                    "#!/bin/bash\n",
                                    "\n",
                                    "set -e\n",
                                    "\n",
                                    "apt-get -y update\n",
                                    "\n",
                                    "# Install general dependencies that are needed before Chef is bootstrapped\n",
                                    "apt-get -y install git jq\n",
                                    "\n",
                                    "# Install chef-dk\n",
                                    "curl -LO https://omnitruck.chef.io/install.sh && sudo bash ./install.sh -v 0.14.25 -P chefdk && rm install.sh\n",
                                    "\n",
                                    "mkdir -p /etc/chef/\n",
                                    "\n",
                                    "cat <<EOF > /etc/chef/client.rb\n",
                                    "log_level       :info\n",
                                    "log_location    \"/var/log/chef-client.log\"\n",
                                    "chef_repo_path  \"/etc/chef/\"\n",
                                    "cookbook_path   \"/etc/chef/cookbooks/\"\n",
                                    "local_mode      true\n",
                                    "json_attribs    \"/etc/chef/json_attributes.json\"\n",
                                    "EOF\n",
                                    "\n",
                                    "cat <<EOF > /etc/chef/json_attributes.json\n",
                                    "{\n",
                                    "  \"run_list\": [\n",
                                    "    \"wordpress::default\"\n",
                                    "  ]\n",
                                    "}\n",
                                    "EOF\n",
                                    "\n",
                                    "mkdir /etc/chef/cookbooks/\n",
                                    "cd /etc/chef/cookbooks/\n",
                                    "git clone https://github.com/brint/wordpress-cookbook.git\n",
                                    "/usr/bin/berks vendor /etc/chef/cookbooks/\n",
                                    "chef-client\n",
                                    "chmod -R 755 /var/www/wordpress/\n",
                                    "sed -i 's/ServerName/ServerName localhost/g' /etc/apache2/sites-enabled/wordpress.conf\n",
                                    "service apache2 restart\n",
                                    "\n"
                                   ]
                                ]
                              }
                            },
                   "Tags" : [
                     { "Key" : "Owner",
                       "Value" : "Prudhvi.Atluri"
                      },
                      { "Key" : "Environment",
                        "Value" : "Application-test"
                       },
                      {"Key" : "ExpirationDate",
                       "Value" : "03-30-2017" }
                     ]
                   }
         }

      }
    }
  }
